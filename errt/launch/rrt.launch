<?xml version="1.0" ?>
<launch>									<!-- Parameter descriptions -->
  <param name="MAP_FRAME_ID_" type="str" value="world"/>			<!-- The ufomaps frame id -->
  <env name="ROSCONSOLE_FORMAT" value="[${severity}] : ${message}"/>
  <!-- RRT general parameters -->
  <param name="RUN_BY_NODES_" type="bool" value="true" />			<!-- Run by number_of_nodes if true and by Number_of_itterations if false -->
  <param name="NUMBER_OF_NODES_" type="int" value="3000" />			<!-- The amount of nodes in the RRT-tree -->
  <param name="NUMBER_OF_GOALS_" type="int" value="60" />			<!-- The amount of goals to be generated -->
  <param name="NUMBER_OF_ITTERATIONS_" type="int" value="5000" />		<!-- The maximum number of itterations, for when you run by itterations -->
  <param name="RESOLUTION_" type="double" value="0.3" />			<!-- The size of the voxels in ufomap -->
  <param name="PLANNING_DEPTH_" type="double" value="3" />
  <param name="MIN_INFO_GOAL_" type="double" value="1" />
  <param name="GOAL_SENSOR_RANGE_" type="double" value="3" />

  <!-- RRT-tree parameters -->
  <param name="DISTANCE_BETWEEN_NODES_" type="double" value="0.4" />		<!-- The distance between nodes in a finished path -->
  <param name="DISTANCE_BETWEEN_GOALS_" type="double" value="0.2" />		<!-- The minimum guranteed distance between generated goals -->
  <param name="MINIMUM_DISTANCE_TO_GOAL_" type="double" value="1" />	<!-- The minimum guaranteed distance between generated goals and the root -->
  <param name="RADIOUS_" type="double" value="0.30" />			<!-- The radious for sphere checks -->
  <param name="SCALER_AABB_" type="double" value="15" />			<!-- The bounding box 'radius', signifying the border between local and global space -->
  
  <!-- Tuning parameters -->
  <param name="SCALER_DISTANCE_" type="double" value="0.1" />			<!-- The scaler for the distance cost during path evaluation -->
  <param name="SCALER_INFORMATION_GAIN_" type="double" value="0.2" />	<!-- The scaler for the information gain during path evaluation -->
  <param name="SCALER_ACTUATION_" type="double" value="0.1" />	<!-- The scaler for the actuation cost during path evaluation -->
  <param name="NEXT_PATH_DISTANCE_" type="double" value="0.5" />		<!-- The distance from the current goal at which a new path will be calculated -->
  <param name="NEXT_POINT_DISTANCE_" type="double" value="0.5" />		<!-- The distance from the current point at which the next point in the path will be set to current point -->
  <param name="PATH_IMPROVEMENT_MAX_" type="double" value="5000" />		<!-- The maximum amount of micro seconds which can be spent improving a single path before starting to exit the function -->
  <param name="GLOBAL_STRATEGY_THRESHOLD_" type="double" value="1" />	<!-- The threshold at which the global strategy will be used instead of the local strategy; This also acts as the cutoff point for accepted accepted paths by the local planner -->
  <param name="GLOBAL_PATH_THRESHOLD_" type="double" value="1" />		<!-- The threshold at which the global strategy will accept a found path -->
  
  <!-- Sensor parameters -->
  <param name="SENSOR_RANGE_" type="double" value="7" />			<!-- The range of the lidar sensor, used for information gain calculations -->
  <param name="SENSOR_MIN_" type="double" value="0.4" />			<!-- The distance at which the sensor will exclude hits, as to not include occupation hits from the drone itself -->
  <param name="SENSOR_HORIZONTAL_" type="double" value="0.78" />		<!-- The horizontal angle for the bounding volume used for information gain calculations, given in radians -->
  <param name="SENSOR_VERTICAL_" type="double" value="0.393" />		<!-- The vertical angle for the bounding volume used for information gain calculations, given in radians -->
  
  <!-- NMPC parameters -->
  <param name="NMPC_POINTS_" type="int" value="50" />			<!-- The amount of points in the NMPC -->
  <param name="NMPC_DT_" type="double" value="0.4" />			<!-- The amount of time between points -->
  <param name="POSITION_TRACKING_WEIGHT_X_" type="double" value="0" />	<!-- Add description here -->
  <param name="POSITION_TRACKING_WEIGHT_Y_" type="double" value="0" />	<!-- Add description here -->
  <param name="POSITION_TRACKING_WEIGHT_Z_" type="double" value="0" />	<!-- Add description here -->
  <param name="ANGLE_WEIGHT_ROLL_" type="double" value="5" />		<!-- Add description here -->
  <param name="ANGLE_WEIGHT_PITCH_" type="double" value="5" />		<!-- Add description here -->
  <param name="INPUT_WEIGHT_THRUST_" type="double" value="20" />		<!-- Add description here -->
  <param name="INPUT_WEIGHT_ROLL_" type="double" value="100" />		<!-- Add description here -->
  <param name="INPUT_WEIGHT_PITCH_" type="double" value="100" />		<!-- Add description here -->
  <param name="INPUT_RATE_WEIGHT_THRUST_" type="double" value="20" />	<!-- Add description here -->
  <param name="INPUT_RATE_WEIGHT_ROLL_" type="double" value="100" />		<!-- Add description here -->
  <param name="INPUT_RATE_WEIGHT_PITCH_" type="double" value="100" />	<!-- Add description here -->
  
    <!-- Initial point parameters -->
  <param name="INITIAL_POINT_" type="bool" value="true" />			<!-- Denotes if there's an initial given point to travel to or not -->
  <param name="INITIAL_X_" type="double" value="2" />			<!-- The x value of the initial given point -->
  <param name="INITIAL_Y_" type="double" value="0" />			<!-- The y value of the intiial given point -->
  <param name="INITIAL_Z_" type="double" value="1" />			<!-- The z value of the intiial given point -->

  <node pkg="errt" type="errt_node" name="errt_node" output="screen" required="true">
    <remap from="ODOMETRY_IN_" to="/hummingbird/ground_truth/odometry"/>				<!-- The odometry topic subscribed to -->
    <remap from="UFOMAP_IN_" to="ufomap_mapping_server_node/map_depth_3"/>			<!-- The ufomap topic subscribed to -->
    <remap from="REFERENCE_OUT_" to="/hummingbird/reference"/>					<!-- The topic to post the control reference to -->
  </node>

  <node type="visualize_navigation" name="visualize_navigation" pkg="visualization_tools" />
</launch>
