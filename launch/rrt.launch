<?xml version="1.0" ?>
<launch>									<!-- Parameter descriptions -->
  <param name="MAP_FRAME_ID_" type="str" value="world"/>			<!-- The ufomaps frame id -->
  <env name="ROSCONSOLE_FORMAT" value="[${severity}] : ${message}"/>

  <!-- Candidate goal parameters --> 
  <param name="MIN_INFO_GOAL_" type="double" value="1" />       <!-- The minimum information gain for a candidate goal. Any value but 1 increases the information gain calculations for each sampled candidate goal and can lead to higher computation time -->   
  <param name="GOAL_SENSOR_RANGE_" type="double" value="3" /> <!-- Separate sensor range for "MIN_INFO_GOAL_" calculation. Preferably set lower than SENSOR_RANGE to promote candidate goals to be generated closer to unknown space --> 
  <param name="NUMBER_OF_GOALS_" type="int" value="60" />			<!-- Number of candidate goals to be generated -->
  <param name="MIN_DIST_TO_GOAL_" type="double" value="1" />	<!-- The minimum distance between candidate goals and the robot position -->
  <param name="DIST_GOALS_" type="double" value="0.2" />		<!-- The minimum distance between different generated candidate goals -->

  <!-- RRT parameters -->
  <param name="RUN_BY_NODES_" type="bool" value="true" />			<!-- Run by number_of_nodes if true and by number_of_itterations if false. Recommended as True -->
  <param name="NUMBER_OF_NODES_" type="int" value="2000" />			<!-- Size of the tree as the exit condition for tree expansion -->
  <param name="NUMBER_OF_ITERATIONS_" type="int" value="10000" />		<!-- The number of iterations, only used if RUN_BY_NODES_ is false -->

  <param name="RESOLUTION_" type="double" value="0.25" />			<!-- REMOVE?? Set to the same as UFOmap resolution -->
  <param name="PLANNING_DEPTH_" type="double" value="2" />   <!-- The depth in the OcTree for performing volumetric collision checks in the UFOmap.-->
  <param name="DIST_NODES_" type="double" value="0.4" />		<!-- The set distance between poses in a candidate branch - this must be synced with NMPC_DT_ for the speed profile as v_desired = DISTANCE_BETWEEN_NODES_ / NMPC_DT_ -->
  <param name="ROBOT_SIZE" type="double" value="0.4" />			<!-- The radius of volumetric collision checks for robot-safe tree generation -->
  <param name="GOAL_CONN_DIST_" type="double" value="2" />    <!-- Maximum distance for attempting to connect candidate goals to tree nodes --> 
  <param name="V_LOCAL_" type="double" value="20" />			<!-- The Bounding box side length denoting the local sampling space -->

  <!-- Sensor parameters -->
  <param name="SENSOR_RANGE_" type="double" value="10" />			<!-- The range of the lidar sensor, used for information gain calculations. Set lower than sensor range in UFOmap. -->
  <param name="SENSOR_MIN_" type="double" value="0.4" />			<!-- The distance at which the sensor will exclude hits, as to not include occupation hits from the drone itself -->
  <param name="SENSOR_VERTICAL_" type="double" value="0.393" />		<!-- The vertical angle cut-off (half FoV) for the LiDAR, used for information gain calculation bounding boxes, given in radians. Ex. Ouster 45deg FoV -> 0.393rad (x2) -->
  <param name="INFO_GAIN_DEPTH_" type="double" value="2" /> <!-- The depth in the OcTree for information gain calculations -->
  

  <!-- Tuning parameters -->
  <param name="K_DIST_" type="double" value="0.3" />			<!-- The scaler for the distance cost during path evaluation -->
  <param name="K_INFO_" type="double" value="0.4" />	<!-- The scaler for the information gain during path evaluation -->
  <param name="K_U_" type="double" value="0.1" />	<!-- The scaler for the actuation cost during path evaluation -->
  <param name="RECALC_DIST_" type="double" value="2" />		<!-- The distance from the current goal at which a new path will be calculated -->
  <param name="PATH_UPDATE_DIST_" type="double" value="0.3" />		<!-- The distance from the current robot pose at which the trajectory segment updates and is sent to the pose ref topic -->
  <param name="PATH_IMPROVEMENT_MAX_" type="double" value="3000" />		<!-- The maximum amount of micro seconds which can be spent improving a single path -->

  <!-- NMPC parameters. Recommended to not touch. -->
  <param name="NMPC_HORIZON_" type="int" value="50" />			<!-- Horizon in the NMPC problem. If edited must then also be specified in the NMPC module builder -->
  <param name="NMPC_DT_" type="double" value="0.4" />			<!-- Sampling time of the NMPC problem. This also specifies the desired dt to reach each path segment set by DISTANCE_BETWEEN_NODES_ ->
  <param name="POSITION_TRACKING_WEIGHT_X_" type="double" value="0" />	<!-- Qx -->
  <param name="POSITION_TRACKING_WEIGHT_Y_" type="double" value="0" />
  <param name="POSITION_TRACKING_WEIGHT_Z_" type="double" value="0" />
  <param name="ANGLE_WEIGHT_ROLL_" type="double" value="0" />		
  <param name="ANGLE_WEIGHT_PITCH_" type="double" value="0" />	
  <param name="INPUT_WEIGHT_THRUST_" type="double" value="5" /> <!-- Qu -->
  <param name="INPUT_WEIGHT_ROLL_" type="double" value="10" />		
  <param name="INPUT_WEIGHT_PITCH_" type="double" value="10" />		
  <param name="INPUT_RATE_WEIGHT_THRUST_" type="double" value="5" />	<!-- Qdu -->
  <param name="INPUT_RATE_WEIGHT_ROLL_" type="double" value="10" />		
  <param name="INPUT_RATE_WEIGHT_PITCH_" type="double" value="10" />	
  
    <!-- Initial starting-point parameters -->
  <param name="INITIAL_POINT_" type="bool" value="false" />			<!-- Denotes if there's a starting-point to travel to or not. Can be useful to start ERRT with an initial small map as opposed to from the ground for the first trajectory. -->
  <param name="INITIAL_X_" type="double" value="5" />			<!-- The x value of the initial given point -->
  <param name="INITIAL_Y_" type="double" value="0" />			<!-- The y value of the intiial given point -->
  <param name="INITIAL_Z_" type="double" value="1" />			<!-- The z value of the intiial given point -->

  <node pkg="errt" type="errt_node" name="errt_node" output="screen" required="true">
    <remap from="ODOMETRY_IN_" to="/hummingbird/ground_truth/odometry"/>				<!-- The odometry topic -->
    <remap from="UFOMAP_IN_" to="ufomap_mapping_server_node/map"/>			<!-- The ufomap topic -->
    <remap from="REFERENCE_OUT_" to="/hummingbird/reference"/>					<!-- References along trajectory, updated by  PATH_UPDATE_DIST_-->
    <remap from="PATH_OUT_" to="/hummingbird/command/trajectory"/>					<!-- Path topic as a MultiDOFJointTrajectory message - sent to trajectory tracking controller -->
  </node>

  <node type="visualize_navigation" name="visualize_navigation" pkg="visualization_tools" />
</launch>
